#include <stdio.h>

/* Function to check if a string is a valid float */
int floatChecker(const char *str) {
    int i = 0, fCount = 0;

  
    if (str[i] == '-') { /*Check for negatives*/
        i++;
    }

     /*Scanning the data file*/
    for (; str[i] != '\0'; i++) {
        if (str[i] == '.') {
            fCount++;
            if (fCount > 1) {
                return 0;  /*Invalid if more than 1*/
            }
        } else if (str[i] < '0' || str[i] > '9') {  /*Check if character is not a digit*/
            return 0;  
        }
    }

   
    return fCount <= 1;
}

int main() {
    FILE *sourceFile, *updtFile; /*updated file*/
    char buffer[100];  /*Buffer size*/
    int invalidCount = 0, validCount = 0;

    /*Reading the data file*/
    sourceFile = fopen("data.txt", "r");
    if (sourceFile == NULL) {
        printf("Something went wrong, please try again.\n");
        return 1;  /*Exits if unable to open file*/
    }

     /*Opening new file to store the numbers*/
    updtFile = fopen("new_data.txt", "w");
    if (updtFile == NULL) {
        printf("Something went wrong, please try again.\n");
        fclose(sourceFile);  /*Closing source file*/
        return 1;
    }

    /*using fgets to read each line from the file*/
    while (fgets(buffer, sizeof(buffer), sourceFile)) {
        int i = 0;
        char value[70];  
        int valueIndex = 0; /*Index for the values*/

       /*Process each digit or alphabet*/
        while (buffer[i] != '\0') {
            if (buffer[i] == ' ' || buffer[i] == '\n') {  
                if (valueIndex > 0) {   /*Processing of a value*/
                    value[valueIndex] = '\0'; 
                    if (floatChecker(value)) { /*Calling the definied function*/
                        fprintf(updtFile, "%s\n", value);   /*Adding the value to the new file*/
                        validCount++;
                    } else {
                        invalidCount++;  /*Increase by each invalid count*/
                    }
                    valueIndex = 0;  /*Reset for next value*/
                }
            } else {
                value[valueIndex++] = buffer[i];  /*Increases if character is detected*/
            }
            i++;
        }
    }

    /*Closing both files*/
    fclose(sourceFile);
    fclose(updtFile);

     /*Displaying total number of invalid floats*/
    printf("Number of invalid float values: %d\n", invalidCount);

    return 0;
}
